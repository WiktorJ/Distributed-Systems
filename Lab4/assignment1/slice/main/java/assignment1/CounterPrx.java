// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `assignment1.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package assignment1;

public interface CounterPrx extends Ice.ObjectPrx
{
    public long increment();

    public long increment(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_increment();

    public Ice.AsyncResult begin_increment(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_increment(Ice.Callback __cb);

    public Ice.AsyncResult begin_increment(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_increment(Callback_Counter_increment __cb);

    public Ice.AsyncResult begin_increment(java.util.Map<String, String> __ctx, Callback_Counter_increment __cb);

    public Ice.AsyncResult begin_increment(IceInternal.Functional_LongCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_increment(IceInternal.Functional_LongCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_increment(java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_LongCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_increment(java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_LongCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public long end_increment(Ice.AsyncResult __result);

    public long decrement();

    public long decrement(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_decrement();

    public Ice.AsyncResult begin_decrement(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_decrement(Ice.Callback __cb);

    public Ice.AsyncResult begin_decrement(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_decrement(Callback_Counter_decrement __cb);

    public Ice.AsyncResult begin_decrement(java.util.Map<String, String> __ctx, Callback_Counter_decrement __cb);

    public Ice.AsyncResult begin_decrement(IceInternal.Functional_LongCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_decrement(IceInternal.Functional_LongCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_decrement(java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_LongCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_decrement(java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_LongCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public long end_decrement(Ice.AsyncResult __result);
}
