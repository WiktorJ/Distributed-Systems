// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `assignment2.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package assignment2;

public class Loan implements java.lang.Cloneable, java.io.Serializable
{
    public String interest;

    public String paid;

    public String toPay;

    public int monthsLeft;

    public Loan()
    {
        interest = "";
        paid = "";
        toPay = "";
    }

    public Loan(String interest, String paid, String toPay, int monthsLeft)
    {
        this.interest = interest;
        this.paid = paid;
        this.toPay = toPay;
        this.monthsLeft = monthsLeft;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Loan _r = null;
        if(rhs instanceof Loan)
        {
            _r = (Loan)rhs;
        }

        if(_r != null)
        {
            if(interest != _r.interest)
            {
                if(interest == null || _r.interest == null || !interest.equals(_r.interest))
                {
                    return false;
                }
            }
            if(paid != _r.paid)
            {
                if(paid == null || _r.paid == null || !paid.equals(_r.paid))
                {
                    return false;
                }
            }
            if(toPay != _r.toPay)
            {
                if(toPay == null || _r.toPay == null || !toPay.equals(_r.toPay))
                {
                    return false;
                }
            }
            if(monthsLeft != _r.monthsLeft)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::assignment2::Loan");
        __h = IceInternal.HashUtil.hashAdd(__h, interest);
        __h = IceInternal.HashUtil.hashAdd(__h, paid);
        __h = IceInternal.HashUtil.hashAdd(__h, toPay);
        __h = IceInternal.HashUtil.hashAdd(__h, monthsLeft);
        return __h;
    }

    public Loan
    clone()
    {
        Loan c = null;
        try
        {
            c = (Loan)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(interest);
        __os.writeString(paid);
        __os.writeString(toPay);
        __os.writeInt(monthsLeft);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        interest = __is.readString();
        paid = __is.readString();
        toPay = __is.readString();
        monthsLeft = __is.readInt();
    }

    static public void
    __write(IceInternal.BasicStream __os, Loan __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public Loan
    __read(IceInternal.BasicStream __is, Loan __v)
    {
        if(__v == null)
        {
             __v = new Loan();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final Loan __nullMarshalValue = new Loan();

    public static final long serialVersionUID = -5405403366295739113L;
}
